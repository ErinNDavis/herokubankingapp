{"version":3,"sources":["components/Navbar.js","components/home.js","components/login.js","components/deposit.js","components/withdraw.js","components/logout.js","components/changePwd.js","App.js","components/useToken.js","index.js"],"names":["NavBar","username","JSON","parse","window","localStorage","getItem","name","className","id","exact","activeClassName","to","Home","user","email","balance","deleteAccount","credentials","a","fetch","method","headers","body","stringify","then","data","json","onSubmit","e","prompt","console","log","preventDefault","sessionStorage","removeItem","location","reload","href","onSubmitpassword","Card","border","Img","src","alt","ImgOverlay","Title","Text","Button","onClick","loginUser","result","status","alert","token","setItem","signupUser","error","Login","setToken","useState","setEmail","password","setPassword","setName","handleSubmitLogin","undefined","handleSubmitSignup","bgcolor","header","Header","Body","Form","Group","Label","InputGroup","Control","type","placeholder","required","onChange","target","value","as","Deposit","deposit","setDeposit","isValid","setIsValid","setBalance","userbalance","ctx","useContext","DataContext","updateDB","handleSubmit","updateBalance","newBalance","parseInt","toString","controlId","min","disabled","Withdraw","withdrawal","setWithdrawal","isNaN","Logout","changePassword","ChangePwd","setPassworda","passwordb","setPasswordb","length","createContext","App","users","updateUsers","Name","updateEmail","updatePassword","depositAmount","transaction","updateUser","userToken","useToken","Provider","style","padding","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43c9df3f.chunk.js","sourcesContent":["import React from 'react';\n//import { useContext } from 'react';\nimport \"./Navbar.css\";\nimport { NavLink } from 'react-router-dom';\n\n\nconst NavBar = () => {\n    const user = JSON.parse(window.localStorage.getItem('user'));\n    const username = user.name;\n\n    return (\n        \n        <nav className=\"navbar bg-light\">\n            <div id=\"nav-username\">\n                <h3>{username}</h3>\n            </div>\n            <div className=\"container-fluid\">\n                <NavLink\n                    exact\n                    activeClassName=\"active\"\n                    className=\"nav-link\"\n                    to=\"/\">\n                        Welcome to BadBank\n                        <span className=\"tooltiptext\"> Home page/Account Information </span>\n                </NavLink>\n                <NavLink \n                    activeClassName=\"active\"\n                    className=\"nav-link ms-auto\"  \n                    to=\"/deposit/\">\n                        Deposit\n                        <span className=\"tooltiptext\">Deposit cash from your account. </span>\n                </NavLink>        \n                <NavLink \n                    activeClassName=\"active\"\n                    className=\"nav-link\"  \n                    to=\"/withdraw/\">\n                        Withdraw\n                        <span className=\"tooltiptext\">Withdraw cash from your account. </span>\n                </NavLink>      \n                <NavLink \n                    activeClassName=\"active\"\n                    className=\"nav-link\"  \n                    to=\"/logout/\">\n                        Logout\n                        <span className=\"tooltiptext\">Logout of your account. </span>\n                </NavLink> \n            </div>       \n        </nav>\n    )\n}\n\nexport default NavBar;","import { Card, Button } from 'react-bootstrap';\nimport React from 'react';\nimport \"./home.css\";\n\nfunction Home(){\n    const user = JSON.parse(window.localStorage.getItem('user'));\n    const name = user.name;\n    const email = user.email;\n    const balance = user.balance;\n\n    async function deleteAccount(credentials){\n        const result = await fetch('/api/home', {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(credentials)\n        })\n          .then(data => data.json())\n    }\n\n    const onSubmit = async e => {\n        \n        let closeAccount = prompt(\"This will permanently delete your account. Type YES to confirm.\");\n        if (closeAccount === 'YES'){\n            console.log(\"delete\");\n            \n            e.preventDefault();\n            deleteAccount({ email });\n\n            sessionStorage.removeItem('token');\n            localStorage.removeItem('user');\n            window.location.reload()\n            window.location.href = \"/\";\n        }\n    }\n\n    const onSubmitpassword = async e => {\n        \n            console.log(\"reset\");\n            e.preventDefault();\n            window.location.href = window.location + \"changePwd\"\n            \n    }\n\n    return (\n        \n        <Card className=\"bg-dark text-white\" border=\"light\" >\n            <Card.Img src=\"./bank.jpg\" alt=\"Banking image\" />\n            <Card.ImgOverlay>\n                <Card.Title className=\"title\">Welcome To BadBank</Card.Title>\n                <Card.Text className=\"text\">\n                    Thank you for trusting us with your banking needs!\n                </Card.Text>\n                <div className=\"user-home\">\n                    <Card.Text>\n                        Username: {name} \n                    </Card.Text>\n                    <Card.Text>\n                        Balance: ${balance}\n                    </Card.Text>\n                    <Card.Text>\n                        <div>\n                            <Button onClick={onSubmitpassword}>Reset password</Button>\n                        </div>\n                        <div>\n                            <Button onClick={onSubmit}>Permanently close this Account.</Button>\n                        </div>\n                    </Card.Text>\n                </div>\n            </Card.ImgOverlay>\n        </Card>\n\n    );\n}\n\nexport default Home;","import React, { useState } from 'react';\r\nimport { Card, Form, Button, InputGroup } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport PropTypes from 'prop-types';\r\nimport \"./home.css\";\r\n\r\nasync function loginUser(credentials){\r\n  const result= await fetch('/api/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(credentials)\r\n    })\r\n      .then(data => data.json())\r\n      .then(user => user)\r\n  const user = result.user;\r\n\r\n  if(result.status === 'ok') {\r\n    console.log('Got the token: ', result.data)\r\n    console.log('Got user: ', result.user)\r\n\t\talert('You have successfully logged in')\r\n    const token = result.data;\r\n    localStorage.setItem(\"user\", JSON.stringify(result.user));\r\n    return token; \r\n    //window.location.href = window.location + \"home\"\r\n  }\r\n}\r\n\r\nasync function signupUser(credentials){\r\n  const result = await fetch('/api/signup', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(credentials)\r\n  })\r\n    .then(data => data.json())\r\n\r\n  if (result.status === 'ok') {\r\n    alert('You have successfully created an account');\r\n    window.location.reload();\r\n    alert('Please login to your newly created account');\r\n  } \r\n  else {\r\n    alert(result.error)\r\n  }\r\n}\r\n\r\nexport default function Login({ setToken }) {\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [name, setName] = useState();\r\n  const balance = 0;\r\n  \r\n  const handleSubmitLogin = async e => {\r\n    e.preventDefault();\r\n    console.log(\"clicked login in\");\r\n    const token = await loginUser({\r\n      email,\r\n      password\r\n    });\r\n\r\n    if (token !== undefined){\r\n    setToken(token);\r\n    console.log(token)\r\n    window.location.reload()\r\n    }\r\n    else alert(\"invalid email or password, please try again or create an account\")\r\n  }\r\n\r\n  const handleSubmitSignup = async e => {\r\n    e.preventDefault();\r\n    console.log(\"clicked signed up\");\r\n    signupUser({\r\n      name,\r\n      email,\r\n      password,\r\n      balance\r\n    });\r\n  }\r\n  return (\r\n      <Card\r\n        bgcolor=\"primary\"\r\n        header=\"Login\"\r\n      >\r\n          \r\n          <Card.Img src=\"./bank.jpg\" alt=\"Banking image\" />\r\n          <Card.ImgOverlay>\r\n            <Card.Title className=\"title\">Welcome To BadBank</Card.Title>\r\n              <Card.Text className=\"text\">\r\n                Let us help you with all your banking needs!\r\n              </Card.Text>\r\n\r\n              <div className=\"spacer\">\r\n                <br></br>\r\n                <br></br>\r\n              </div>\r\n\r\n            <div className=\"container-login\">\r\n\r\n              <Card.Header> Login </Card.Header>\r\n                <Card.Body>\r\n                  <Form className=\"acc-form\" onSubmit={handleSubmitLogin}>\r\n                    <Form.Group className=\"mb-3-email\">\r\n                      <Form.Label> Email address </Form.Label>\r\n                      <InputGroup>\r\n                        <Form.Control \r\n                            type=\"email\"\r\n                            placeholder=\"email@address.com\"\r\n                            required\r\n                            id=\"email\"\r\n                            onChange={e=> setEmail(e.target.value)}\r\n                        />\r\n                      </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3-password\">\r\n                      <Form.Label>Password</Form.Label>\r\n                      <InputGroup>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"password\"\r\n                            required\r\n                            id=\"password\"\r\n                            onChange={e=> setPassword(e.target.value)}\r\n                        />\r\n                      </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Button as=\"input\" type=\"submit\" value=\"Login\"/>\r\n                  </Form>    \r\n                </Card.Body>\r\n            </div>\r\n                \r\n            <div className=\"spacer\">\r\n                <br></br>\r\n            </div>\r\n            \r\n            <div className=\"container-create\">\r\n                <Card.Header> Create An Account </Card.Header>\r\n                <Card.Body>\r\n                <Form className=\"acc-form\" onSubmit={handleSubmitSignup}>\r\n                    <Form.Group className=\"mb-3-name\">\r\n                        <Form.Label className=\"name-label\">Enter Full Name</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Name\"\r\n                                required\r\n                                id=\"name\"\r\n                                onChange={e=> setName(e.target.value)}\r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3-email\">\r\n                        <Form.Label> Email address </Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control \r\n                                type=\"email\"\r\n                                placeholder=\"email@address.com\"\r\n                                required\r\n                                id=\"email\"\r\n                                onChange={e=> setEmail(e.target.value)}\r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3-password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"password\"\r\n                                required\r\n                                id=\"password\"\r\n                                onChange={e=> setPassword(e.target.value)}\r\n                            />\r\n                        </InputGroup>\r\n                        <Form.Text className=\"text-muted\">\r\n                            Password must contain at least 8 characters.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Button as=\"input\" type=\"submit\" value=\"Create Account\"/>\r\n                </Form>\r\n                </Card.Body>\r\n            </div>\r\n          </Card.ImgOverlay> \r\n      </Card> \r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n    setToken: PropTypes.func.isRequired\r\n}","import React, { useState, useContext } from 'react';\nimport { Card, Form, Button, InputGroup } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { DataContext } from \"../App.js\"\n\nfunction Deposit() {\n\n  const [deposit, setDeposit] = useState(0);\n  const [isValid, setIsValid] = useState(false);\n  const [balance, setBalance] = useState('0');\n\n  //-----------------------------------------------\n  let user = JSON.parse(window.localStorage.getItem('user'));\n    let userbalance = user.balance;\n    let email = user.email;\n    console.log(userbalance + \" userbalance\");\n  //-------------------------------------------------\n  \n  const ctx = useContext(DataContext);\n  \n  ctx.balance = userbalance;\n  let status = ctx.balance;\n\n  const handleChange = e => {\n    setIsValid(true);\n    setDeposit(e.target.value);\n  };\n\n  async function updateDB(credentials){\n    const result = await fetch('/api/deposit', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    })\n      .then(data => data.json())\n  }\n\n  const handleSubmit = async e => {\n    \n    if (deposit == 0) {\n      alert(\"Please enter how much you would like to deposit\");\n      setDeposit(0);\n      setIsValid(false);\n      return;\n    }\n    \n    ctx.updateBalance(deposit, \"ADD\")\n    e.preventDefault();\n\n    var newBalance = parseInt(balance) + parseInt(deposit);\n    setBalance(newBalance.toString());\n\n    status = ctx.balance;\n    console.log(status);\n\n    alert('Deposit was a success! Account Balance is now: $' + ctx.balance);\n    user['balance']=ctx.balance;\n    localStorage.setItem('user', JSON.stringify(user));\n\n    e.preventDefault();\n    console.log(\"balance \"+ status + \" email \" + email);\n    updateDB({\n      email,\n      status\n    });\n  };\n\n  return (\n\n    <Card\n      bgcolor=\"primary\"\n      header=\"Deposit\"\n    >\n      <Card.Img src=\"./bank.jpg\" alt=\"Banking image\" />\n      <Card.ImgOverlay>\n      <div className=\"money-card\">\n        <Card.Header> Deposit </Card.Header>\n        <Card.Body>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group className=\"mb-3\" controlId=\"deposit amount\">\n            <h3> Account Balance: $ {status} </h3>\n              <Form.Label> Please enter the amount you would like to deposit. </Form.Label>\n              <InputGroup>\n                <Form.Control type=\"number\" placeholder=\"$0\" min=\"0\" onChange={handleChange} />\n              </InputGroup>\n            </Form.Group>\n            <Button as=\"input\" type=\"submit\" disabled={!isValid} value=\"Deposit\"/>\n          </Form>\n        </Card.Body>\n        </div>\n      </Card.ImgOverlay>\n    </Card>\n  );\n}\n\nexport default Deposit;","import {React, useState, useContext } from 'react';\nimport { Card, Form, Button, InputGroup } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { DataContext } from \"../App.js\"\nimport \"./home.css\";\n\nfunction Withdraw() {\n  const [withdrawal, setWithdrawal] = useState(0);\n  const [isValid, setIsValid] = useState(false);\n  const [balance, setBalance] = useState('0');\n\n  //-----------------------------------------------\n  let user = JSON.parse(window.localStorage.getItem('user'));\n  let userbalance = user.balance;\n  let email = user.email;\n  console.log(userbalance + \" userbalance\");\n  //-------------------------------------------------\n\n  const ctx = useContext(DataContext);\n\n  ctx.balance = userbalance;\n  let status = ctx.balance;\n\n  const handleChange = e => {\n    setIsValid(true);\n    setWithdrawal(e.target.value);\n  };\n\n  async function updateDB(credentials){\n    const result = await fetch('/api/withdraw', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    })\n      .then(data => data.json())\n  }\n\n  const handleSubmit = async e => {\n\n    if (isNaN(withdrawal)) {\n      alert(\"Please enter valid number to withdraw, cannot include non-number values.\")\n      setWithdrawal(0);\n      setIsValid(false);\n      return;\n    }\n    \n    if (withdrawal < 0) {\n      alert(\"Please enter valid number to withdraw, cannot include negative numbers.\");\n      setWithdrawal(0);\n      setIsValid(false);\n      return;\n    }\n\n    if (withdrawal > status) {\n      alert(\"Withdraw amount cannot exceed account balance.\")\n    }\n    else{\n\n      ctx.updateBalance(withdrawal, \"MINUS\");\n      e.preventDefault();\n\n      var newBalance = parseInt(balance) - parseInt(withdrawal);\n      setBalance(newBalance.toString());\n\n      status = ctx.balance;\n      console.log(status);\n      alert('Your withdraw was successful. Account Balance is now: $' + ctx.balance);\n\n      user['balance']=ctx.balance;\n      localStorage.setItem('user', JSON.stringify(user));\n      \n      e.preventDefault();\n      console.log(\"balance \"+ status + \" email \" + email);\n      updateDB({\n        email,\n        status\n      });\n    }\n  };\n\n  return (\n    <Card\n      bgcolor=\"primary\"\n      header=\"Withdraw\"\n      status={status}\n    >\n\n      <Card.Img src=\"./bank.jpg\" alt=\"Banking image\" />\n      <Card.ImgOverlay>\n        <div className=\"money-card\">\n        <Card.Header> Withdraw </Card.Header>\n        <Card.Body>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group className=\"mb-3\" controlId=\"withdraw amount\">\n              <h3> Account Balance: $ {status} </h3>\n              <Form.Label> Please enter the amount you would like to withdraw. </Form.Label>\n              <InputGroup>\n                <Form.Control type=\"number\" placeholder=\"$0\" min=\"0\" onChange={handleChange} />\n              </InputGroup>\n            </Form.Group>\n            <Button as=\"input\" type=\"submit\" disabled={!isValid} value=\"Make Withdraw\"/>\n          </Form>\n        </Card.Body>\n        </div>\n      </Card.ImgOverlay>\n    </Card>\n  );\n}\n\nexport default Withdraw;","import { Card, Button } from 'react-bootstrap';\nimport React from 'react';\nimport \"./home.css\";\n\n\nfunction Logout(){\n\n    function onSubmit(){\n        console.log(\"logged out\");\n        sessionStorage.removeItem('token');\n        localStorage.removeItem('user');\n        window.location.reload()\n        window.location.href = \"/\";\n     }\n\n    const user = JSON.parse(window.localStorage.getItem('user'));\n    const name = user.name;\n    const balance = user.balance;\n\n    return(\n        <Card bgcolor=\"primary\" header=\"Deposit\">\n            <Card.Img src=\"./bank.jpg\" alt=\"Banking image\" />\n            <Card.ImgOverlay>\n                <div className=\"user-home\">\n                    <Card.Text>\n                        Username: {name} \n                    </Card.Text>\n                    <Card.Text>\n                        Balance: ${balance}\n                    </Card.Text>\n                </div>\n                <div className=\"message\">\n                    <Card.Header> Thank you for your business. </Card.Header>\n                </div>\n                <Card.Body>\n                    <Button onClick={onSubmit}>Click here to confirm logout.</Button>\n                </Card.Body>\n            </Card.ImgOverlay>\n        </Card>     \n    )\n}\nexport default Logout;\n","import { Card, Button, Form, InputGroup } from 'react-bootstrap';\nimport React, { useState } from 'react';\nimport \"./home.css\";\n\nasync function changePassword(credentials){\n    const result = await fetch('/api/changePwd', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    })\n      .then(data => data.json())\n}\n\n\nexport default function ChangePwd(){\n\n    const [password, setPassworda] = useState();\n    const [passwordb, setPasswordb] = useState();\n\n    let user = JSON.parse(window.localStorage.getItem('user'));\n    let email = user.email;\n\n    const onSubmit = async e => {\n\n        console.log(\"reset\");\n        e.preventDefault();\n        if (password.length < 8) {\n            alert(\"Passwords have to be at least 8 characters\");\n        }\n        if (password !== passwordb){\n            alert(\"Entered Passwords do not match\");\n        }\n        else {\n            alert(\"successfully changed password\");\n            changePassword({ \n                email,\n                password\n            });\n            window.location.reload();\n        }  \n    }\n\nreturn (\n        \n    <Card className=\"bg-dark text-white\" border=\"light\" >\n        <Card.Img src=\"./bank.jpg\" alt=\"Banking image\" />\n        <Card.ImgOverlay>\n            <Card.Title className=\"title\">Welcome To BadBank</Card.Title>\n            <Card.Text className=\"text\">\n                Thank you for trusting us with your banking needs!\n            </Card.Text>\n            <div className=\"user-home\">\n            <Form.Group className=\"mb-3-password\">\n                      <Form.Label>Password</Form.Label>\n                      <InputGroup>\n                        <Form.Control\n                            type=\"password\"\n                            placeholder=\"enter new password\"\n                            required\n                            id=\"current-password\"\n                            onChange={e=> setPassworda(e.target.value)}\n                        />\n                      </InputGroup>\n                      <InputGroup>\n                        <Form.Control\n                            type=\"password\"\n                            placeholder=\"re-enter new password\"\n                            required\n                            id=\"new-password\"\n                            onChange={e=> setPasswordb(e.target.value)}\n                        />\n                      </InputGroup>\n                    </Form.Group>\n                <Card.Text>\n                    <div>\n                        <Button onClick={onSubmit}>Reset password</Button>\n                    </div>\n                </Card.Text>\n            </div>\n        </Card.ImgOverlay>\n    </Card>\n\n);\n}","import { HashRouter, Route } from 'react-router-dom';\nimport \"./App.css\";\nimport NavBar from './components/Navbar';\nimport useToken from './components/useToken';\nimport Home from './components/home';\nimport Login from './components/login';\nimport Deposit from './components/deposit';\nimport Withdraw from './components/withdraw';\nimport Logout from './components/logout';\nimport ChangePwd from './components/changePwd';\nimport React, {createContext, useState} from 'react';\n\nexport const DataContext = createContext();\n\nfunction App() {\n//------------------------------------------------\n  const [user, updateUser]= useState({users:'peter', updateUsers:updateUsers, email:'peter@mit.edu', updateEmail:updateEmail, password:'secret', updatePassword:updatePassword, balance:100, updateBalance:updateBalance});\n  \n  function updateEmail(email){\n    user.email = email;\n  }\n\n  function updateUsers(Name){\n    user.users = Name;\n  }\n\n  function updatePassword(password){\n    user.password = password;\n  }\n  \n  function updateBalance(depositAmount, transaction ){\n    if(transaction ===\"ADD\"){\n      user.balance = parseInt(depositAmount) + user.balance;\n      updateUser(user);\n     // updateAllData(data);\n      console.log(user.balance);\n    }   \n    if(transaction ===\"MINUS\"){\n      user.balance = user.balance - parseInt(depositAmount);\n      updateUser(user);\n     // updateAllData(data);\n      console.log(user.balance);\n    }\n  }\n//----------------------------------------------------------------------\n  const { token, setToken } = useToken();\n\n  if(!token) {\n    return <Login setToken={setToken} />\n  }\n//--------------------------------------------------------\n  return (\n      <HashRouter>\n        <NavBar/>\n        <DataContext.Provider value={user}>\n            <div className=\"container\" style={{padding: \"20px\"}}>\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/changePwd/\" component={ChangePwd} />\n              <Route path=\"/deposit/\" component={Deposit} />\n              <Route path=\"/withdraw/\" component={Withdraw} />\n              <Route path=\"/logout/\" component={Logout} />\n            </div>\n          </DataContext.Provider>\n        </HashRouter>\n    \n  );\n}\n\nexport default App;\n","import { useState } from 'react';\n\nexport default function useToken() {\n\n  const getToken = () => {\n    const tokenString = sessionStorage.getItem('token');\n    return tokenString\n  };\n\n  const [token, setToken] = useState(getToken());\n\n  const saveToken = userToken => {\n    sessionStorage.setItem('token', JSON.stringify(userToken));\n    setToken(userToken.token);\n  };\n\n  return {\n    setToken: saveToken,\n    token\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}